"use strict";

/**
 * ‚úÖ Verificaci√≥n de token al cargar el panel
 * - Impide acceso si el token no existe o es inv√°lido
 * - Redirige a login si el rol no es "admin"
 */
document.addEventListener("DOMContentLoaded", () => {
  const token = localStorage.getItem("token");

  // ‚ùå Token ausente o inv√°lido
  if (!token || typeof token !== "string" || token.length < 10) {
    return bloquearAcceso("‚ö†Ô∏è Token ausente o inv√°lido. Inicia sesi√≥n.");
  }

  try {
    const payload = JSON.parse(atob(token.split('.')[1]));

    // ‚ùå Rol incorrecto
    if (!payload || payload.role !== "admin") {
      return bloquearAcceso("‚õî Acceso denegado. Solo administradores.");
    }

    // ‚úÖ Acceso autorizado
    console.log("‚úÖ Acceso v√°lido como administrador:", payload.username || payload.email);

  } catch (error) {
    console.error("‚ùå Error al decodificar token:", error);
    bloquearAcceso("‚ö†Ô∏è Token corrupto o malformado. Inicia sesi√≥n nuevamente.");
  }
});

/**
 * üîÅ Funci√≥n para bloquear acceso no autorizado
 * - Elimina token y redirige a login
 */
function bloquearAcceso(mensaje) {
  alert(mensaje);
  localStorage.removeItem("token");
  window.location.href = "login.html";
}

/**
 * üîí Logout manual
 * - Limpia token y vuelve a login
 */
function logout() {
  localStorage.removeItem("token");
  window.location.href = "login.html";
}
